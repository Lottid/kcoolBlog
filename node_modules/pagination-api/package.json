{
  "name": "pagination-api",
  "version": "0.1.0",
  "description": "Pagination for nodejs, support bootstrap and custom the css style, support mysql and mongodb.",
  "main": "pagination.js",
  "scripts": {
    "test": "/test"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/kahn1990/pagination-api"
  },
  "keywords": [
    "pagination",
    "nodejs",
    "bootstrap",
    "mysql",
    "mongodb"
  ],
  "author": {
    "name": "kahn1990"
  },
  "email": "kangjian1990@live.com",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/kahn1990/pagination-api/issues"
  },
  "homepage": "http://shiyeshu.com",
  "readme": "\r\n\r\n# pagination\r\n\r\nexample：\r\nDefinitions in routes:\r\n\r\n\tvar pagination = require('pagination-api');\t//Loading 'pagination' module\r\n\r\n\r\n\tvar total_rows;\t//'total_rows' return all article number . 'total_rows' is returns from the database,\r\n\t\t//for example:\r\n\t\t//\ttotal_rows = PostSorts_count_all_result[0].count_all_result;\r\n\r\n\tvar per_pages;\t//'per_pages' is the URL received the current page\r\n\t\t//for example:\r\n\t\t//\tvar per_pages = 1;\r\n\t\t//\tif(req.query.per_page){\r\n\t\t//\t\tper_pages = req.query.per_page;\r\n\t\t//\t};\r\n\t\t//\tif(req.body.per_page){\r\n\t\t//\t\tper_pages = req.body.per_page;\r\n\t\t//\t};\r\n\r\n\tvar per_page;\t//'per_page' is set the page displayed a few articles\r\n\t\t//for example:\r\n\t\t//\tper_page = 4;\r\n\r\n\tvar base_url;\t//'base_url' is the definition of URL.\r\n\t\t//for example:\r\n\t\t//\tbase_url = 'blogs?';\r\n\r\n\tvar changePer_page;\t//'changePer_page' is parameters used to read database pagination\r\n\t\t//for example:\r\n\t\t//\tchangePer_page = ( per_pages - 1 ) * per_page;\r\n\r\n\tvar Create_links;\t//'Create_links' is create a page\r\n\t\t//for example:\r\n\t\t//\tCreate_links = pagination.create_links(total_rows,per_page,per_pages,base_url);\r\n\r\n\tLast, sent to the views\r\n\t\t//for example:\r\n\t\t//\tres.render('/',{Create_links:Create_links});\r\n\r\n\r\nDefinitions in views:\r\n\r\n\t<%- Create_links %>\r\n\r\n# The examples in /test\r\n\r\n\r\n\r\n#分页\r\n示例：\r\n定义routes：\r\n\r\n\tvar pagination = require('pagination-api');\t//加载分页模块\r\n\r\n\tvar total_rows;\t// 'total_rows返回所有的文章数量。”total_rows’是从数据库返回，\r\n\t\t//示例：\r\n\t\t//\ttotal_rows = PostSorts_count_all_result[0].count_all_result;\r\n\r\n\tvar per_pages;\t//'per_pages”是当前页面的URL接收的页码\r\n\t\t//示例：\r\n\t\t//\tvar per_pages = 1;\r\n\t\t//\tif(req.query.per_page){\r\n\t\t//\t\tper_pages = req.query.per_page;\r\n\t\t//\t};\r\n\t\t//\tif(req.body.per_page){\r\n\t\t//\t\tper_pages = req.body.per_page;\r\n\t\t//\t};\r\n\r\n\tvar per_page;\t// 'per_page”设置页面上显示几篇文章\r\n\t\t//示例：\r\n\t\t//\tper_page = 4;\r\n\r\n\tvar base_url;\t//'base_url是URL的定义。\r\n\t\t//示例：\r\n\t\t//\tbase_url = 'blogs?';\r\n\r\n\tvar changePer_page;\t// 'changeper_page”是用来读取数据库分页参数\r\n\t\t//示例：\r\n\t\t//\tchangePer_page = ( per_pages - 1 ) * per_page;\r\n\r\n\tvar Create_links;\t//'create_links”是创建一个网页\r\n\t\t//示例：\r\n\t\t//\tCreate_links = pagination.create_links(total_rows,per_page,per_pages,base_url);\r\n\r\n\t最后发送到views中\r\n\t\t//示例：\r\n\t\t//\tres.render('/',{Create_links:Create_links});\r\n\r\n\r\n定义在views：\r\n\r\n\t<%- Create_links %>\r\n\r\n# 测试示例在 /test\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
  "readmeFilename": "README.md",
  "_id": "pagination-api@0.1.0",
  "_shasum": "43c4e6d25f59ef77d23de10660a875bb361e22e6",
  "_from": "pagination-api@"
}
